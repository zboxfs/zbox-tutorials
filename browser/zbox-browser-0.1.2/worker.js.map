{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/logger.js","webpack:///./src/cache_backend.js","webpack:///./src/message.js","webpack:///./src/utils.js","webpack:///./src/worker.js"],"names":["self","chunkIds","moreModules","moduleId","modules","length","installedChunks","pop","installedModules","0","installedWasmModules","wasmImportObjects","5","./zbox","__wbindgen_object_drop_ref","p0i32","exports","__wbg_get_5320f63bb103784b","p1i32","__wbindgen_is_undefined","__wbg_contains_b515d85cc17dc0dd","__wbg_insert_c974e632bd358df0","p2i32","__wbg_remove_d1752c3356177dd8","__wbindgen_string_new","__wbindgen_json_parse","__widl_f_debug_4_","p3i32","__widl_f_error_1_","__widl_f_error_4_","__widl_f_info_4_","__widl_f_log_4_","__widl_f_warn_4_","__widl_f_get_random_values_with_u8_array_Crypto","__widl_instanceof_WorkerGlobalScope","__widl_f_crypto_WorkerGlobalScope","__widl_f_new_XMLHttpRequest","__widl_f_get_all_response_headers_XMLHttpRequest","__widl_f_open_with_async_XMLHttpRequest","p4i32","p5i32","p6i32","__widl_f_send_XMLHttpRequest","__widl_f_send_with_opt_buffer_source_XMLHttpRequest","__widl_f_set_request_header_XMLHttpRequest","__widl_f_ready_state_XMLHttpRequest","__widl_f_set_timeout_XMLHttpRequest","__widl_f_set_with_credentials_XMLHttpRequest","__widl_f_status_XMLHttpRequest","__widl_f_set_response_type_XMLHttpRequest","__widl_f_response_XMLHttpRequest","__wbg_newnoargs_a172f39151049128","__wbg_call_8a9c8b0a32a202ff","__wbg_now_307a67b1c1d8ca31","__wbg_buffer_0b401f8e593a961e","__wbg_newwithbyteoffsetandlength_533a05dbfbcbee36","__wbg_length_7b1c5e3634bc9051","__wbg_new_662b0aa231e9b27c","__wbg_set_55ad9d0789844e32","__wbg_newwithbyteoffset_74477be1525e8d20","__wbg_subarray_9cc4d5558c9dcf2a","__wbg_slice_cf1634eadc553398","__wbg_byteLength_50d6b93074b674b7","__wbindgen_object_clone_ref","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_rethrow","__wbindgen_memory","../cache_backend","clear","__webpack_require__","module","i","l","call","e","chunkId","promises","push","Promise","resolve","then","importScripts","1","forEach","wasmModuleId","installedWasmModuleData","promise","importObject","req","fetch","p","WebAssembly","compileStreaming","all","items","instantiate","instantiateStreaming","x","arrayBuffer","bytes","res","w","instance","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","s","__webpack_exports__","logger","[object Object]","this","isOn","msg","console","log","warn","error","cacheBackend","contains","insert","remove","_logger__WEBPACK_IMPORTED_MODULE_0__","LOCAL_CACHE_DB","db","storeName","map","Map","dbClosed","reject","ver","Math","floor","Date","now","indexedDB","open","onerror","event","onupgradeneeded","target","result","objectStoreNames","createObjectStore","keyPath","onsuccess","openDb","transaction","objectStore","getAll","errorCode","item","set","relPath","data","close","tx","onabort","oncomplete","store","put","has","delete","deleteObjectStore","deleteStore","slice","message","zbox","initEnv","arg","debug","type","optional","version","exists","openRepo","uri","pwd","opts","repairSuperBlock","repo","info","resetPassword","oldPwd","newPwd","pathExists","isFile","isDir","createFile","openFile","path","createDir","createDirAll","readDir","metadata","history","copy","from","to","removeFile","removeDir","removeDirAll","rename","file","read","readAll","readAllString","write","finish","writeOnce","seek","offset","setLen","currVersion","versionReader","ab2str","buf","String","fromCharCode","apply","Uint16Array","ensureStr","ensureStr2","s2","ensureInt","Number","isInteger","ensureIntOrNeg","opened","files","vrdrs","onmessage","msgTypes","scope","debugOn","params","enable","wasm","init_env","catch","err","finally","postMessage","zbox_version","Repo","repoId","search","exec","parseRepoIdInUri","loadCache","undefined","parseCacheType","cache_backend","opener","RepoOpener","createNew","compress","versionLimit","dedupChunk","readOnly","toString","immediateClose","zboxMsgHandler","cnt","keys","ptr","a","OpenOptions","append","truncate","repoMsgHandler","transBuf","Uint8Array","len","dst","buffer","vrdr","fileMsgHandler","versionReaderMsgHandler"],"mappings":"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","file":"worker.js","sourcesContent":[" \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t0: 1\n \t};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t5: function() {\n \t\t\treturn {\n \t\t\t\t\"./zbox\": {\n \t\t\t\t\t\"__wbindgen_object_drop_ref\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_object_drop_ref\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_get_5320f63bb103784b\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_get_5320f63bb103784b\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_is_undefined\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_is_undefined\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_contains_b515d85cc17dc0dd\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_contains_b515d85cc17dc0dd\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_insert_c974e632bd358df0\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_insert_c974e632bd358df0\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_remove_d1752c3356177dd8\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_remove_d1752c3356177dd8\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_string_new\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_string_new\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_json_parse\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_json_parse\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_debug_4_\": function(p0i32,p1i32,p2i32,p3i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_debug_4_\"](p0i32,p1i32,p2i32,p3i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_error_1_\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_error_1_\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_error_4_\": function(p0i32,p1i32,p2i32,p3i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_error_4_\"](p0i32,p1i32,p2i32,p3i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_info_4_\": function(p0i32,p1i32,p2i32,p3i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_info_4_\"](p0i32,p1i32,p2i32,p3i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_log_4_\": function(p0i32,p1i32,p2i32,p3i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_log_4_\"](p0i32,p1i32,p2i32,p3i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_warn_4_\": function(p0i32,p1i32,p2i32,p3i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_warn_4_\"](p0i32,p1i32,p2i32,p3i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_get_random_values_with_u8_array_Crypto\": function(p0i32,p1i32,p2i32,p3i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_get_random_values_with_u8_array_Crypto\"](p0i32,p1i32,p2i32,p3i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_instanceof_WorkerGlobalScope\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_instanceof_WorkerGlobalScope\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_crypto_WorkerGlobalScope\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_crypto_WorkerGlobalScope\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_new_XMLHttpRequest\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_new_XMLHttpRequest\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_get_all_response_headers_XMLHttpRequest\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_get_all_response_headers_XMLHttpRequest\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_open_with_async_XMLHttpRequest\": function(p0i32,p1i32,p2i32,p3i32,p4i32,p5i32,p6i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_open_with_async_XMLHttpRequest\"](p0i32,p1i32,p2i32,p3i32,p4i32,p5i32,p6i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_send_XMLHttpRequest\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_send_XMLHttpRequest\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_send_with_opt_buffer_source_XMLHttpRequest\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_send_with_opt_buffer_source_XMLHttpRequest\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_set_request_header_XMLHttpRequest\": function(p0i32,p1i32,p2i32,p3i32,p4i32,p5i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_set_request_header_XMLHttpRequest\"](p0i32,p1i32,p2i32,p3i32,p4i32,p5i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_ready_state_XMLHttpRequest\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_ready_state_XMLHttpRequest\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_set_timeout_XMLHttpRequest\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_set_timeout_XMLHttpRequest\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_set_with_credentials_XMLHttpRequest\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_set_with_credentials_XMLHttpRequest\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_status_XMLHttpRequest\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_status_XMLHttpRequest\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_set_response_type_XMLHttpRequest\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_set_response_type_XMLHttpRequest\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_response_XMLHttpRequest\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_response_XMLHttpRequest\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newnoargs_a172f39151049128\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_newnoargs_a172f39151049128\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_call_8a9c8b0a32a202ff\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_call_8a9c8b0a32a202ff\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_now_307a67b1c1d8ca31\": function() {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_now_307a67b1c1d8ca31\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_buffer_0b401f8e593a961e\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_buffer_0b401f8e593a961e\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newwithbyteoffsetandlength_533a05dbfbcbee36\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_newwithbyteoffsetandlength_533a05dbfbcbee36\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_length_7b1c5e3634bc9051\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_length_7b1c5e3634bc9051\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_662b0aa231e9b27c\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_new_662b0aa231e9b27c\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_set_55ad9d0789844e32\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_set_55ad9d0789844e32\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newwithbyteoffset_74477be1525e8d20\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_newwithbyteoffset_74477be1525e8d20\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_subarray_9cc4d5558c9dcf2a\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_subarray_9cc4d5558c9dcf2a\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_slice_cf1634eadc553398\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_slice_cf1634eadc553398\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_byteLength_50d6b93074b674b7\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_byteLength_50d6b93074b674b7\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_object_clone_ref\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_object_clone_ref\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_debug_string\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_debug_string\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_throw\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_throw\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_rethrow\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_rethrow\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_memory\": function() {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_memory\"]();\n \t\t\t\t\t}\n \t\t\t\t},\n \t\t\t\t\"../cache_backend\": {\n \t\t\t\t\t\"clear\": function() {\n \t\t\t\t\t\treturn installedModules[1].exports[\"b\"]();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(\"\" + chunkId + \".worker.js\");\n \t\t\t}\n \t\t}));\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"1\":[5]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"5\":\"8cb10a6ebfe2c4801bc5\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","// logger\nclass Logger {\n  constructor() {\n    this.isOn = false;\n  }\n\n  enable(isOn) {\n    this.isOn = isOn;\n  }\n\n  log(msg) {\n    if (this.isOn) console.log(msg);\n  }\n\n  warn(msg) {\n    if (this.isOn) console.warn(msg);\n  }\n\n  error(msg) {\n    if (this.isOn) console.error(msg);\n  }\n}\n\nexport let logger = new Logger();\n\nexport function log(msg) {\n  logger.log(msg);\n}\n","import { logger } from './logger';\n\n// local cache db name\nconst LOCAL_CACHE_DB = 'zbox_local_cache';\n\n// open cache backend database\nfunction openDb(storeName) {\n  return new Promise((resolve, reject) => {\n    const ver = Math.floor(Date.now() / 1000);\n    let req = indexedDB.open(LOCAL_CACHE_DB, ver);\n\n    req.onerror = (event) => {\n      reject('IndexedDB is forbidden to use');\n    };\n\n    req.onupgradeneeded = (event) => {\n      let db = event.target.result;\n      if (!db.objectStoreNames.contains(storeName)) {\n        db.createObjectStore(storeName, {\n          keyPath: 'relPath'\n        });\n      }\n    };\n\n    req.onsuccess = (event) => {\n      resolve(event.target.result);\n    };\n  });\n}\n\n// delete store in database\nfunction deleteStore(storeName) {\n  return new Promise((resolve, reject) => {\n    const ver = Math.floor(Date.now() / 1000);\n    let req = indexedDB.open(LOCAL_CACHE_DB, ver);\n\n    req.onerror = (event) => {\n      reject('IndexedDB is forbidden to use');\n    };\n\n    req.onupgradeneeded = (event) => {\n      let db = event.target.result;\n      if (db.objectStoreNames.contains(storeName)) {\n        db.deleteObjectStore(storeName);\n      }\n      resolve();\n    };\n\n    req.onsuccess = (event) => {\n      let db = event.target.result;\n      db.close();\n    };\n  });\n}\n\n// local cache backend\nclass CacheBackend {\n  constructor() {\n    this.db = null;\n    this.storeName = null;\n    this.map= new Map();\n    this.dbClosed = true;\n  }\n\n  open(storeName) {\n    let self = this;\n\n    return openDb(storeName)\n      .then(db => {\n        self.db = db;\n        self.storeName = storeName;\n\n        return new Promise((resolve, reject) => {\n          // load all items in local cache db into memory map\n          let req = self.db.transaction(storeName, 'readonly')\n            .objectStore(storeName)\n            .getAll();\n          req.onerror = (event) => {\n            reject('Database error: ' + event.target.errorCode);\n          };\n          req.onsuccess = (event) => {\n            let items = event.target.result;\n            items.forEach(item => {\n              self.map.set(item.relPath, item.data);\n            });\n            logger.log(`Cache backend opened: ${items.length} cache items loaded`);\n            self.dbClosed = false;\n            resolve();\n          };\n        });\n      });\n  }\n\n  // immediate close database withouth saving data\n  immediateClose() {\n    if (!this.dbClosed) {\n      this.db.close();\n      this.storeName = null;\n      this.map.clear();\n      this.dbClosed = true;\n    }\n  }\n\n  close() {\n    let self = this;\n\n    if (self.dbClosed) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n      let tx = self.db.transaction(self.storeName, 'readwrite');\n\n      tx.onabort = (event) => {\n        self.map.clear();\n        reject('Database tx aborted: ' + event.target.errorCode);\n      };\n      tx.onerror = (event) => {\n        self.map.clear();\n        reject('Database tx error: ' + event.target.errorCode);\n      };\n      tx.oncomplete = (event) => {\n        self.map.clear();\n        self.dbClosed = true;\n        resolve();\n      };\n\n      let store = tx.objectStore(self.storeName);\n\n      // clear all store then save all items from memory map\n      store.clear();\n      self.map.forEach((value, key) => {\n        store.put({ relPath: key, data: value });\n      });\n\n      self.db.close();\n    });\n  }\n\n  contains(relPath) {\n    return this.map.has(relPath);\n  }\n\n  get(relPath) {\n    return this.map.get(relPath);\n  }\n\n  insert(relPath, data) {\n    this.map.set(relPath, data);\n  }\n\n  remove(relPath) {\n    this.map.delete(relPath);\n  }\n\n  clear() {\n    this.map.clear();\n\n    let req = this.db.transaction(this.storeName, \"readwrite\")\n      .objectStore(this.storeName)\n      .clear();\n    req.onerror = (event) => {\n      logger.error('Clear local cache failed ' + event.target.errorCode);\n    };\n  }\n\n  destroy(storeName) {\n    return deleteStore(storeName);\n  }\n}\n\nexport let cacheBackend = new CacheBackend();\n\nexport function contains(relPath) {\n  return cacheBackend.contains(relPath);\n}\n\nexport function get(relPath) {\n  return cacheBackend.get(relPath);\n}\n\nexport function insert(relPath, data) {\n  cacheBackend.insert(relPath, data.slice());\n}\n\nexport function remove(relPath) {\n  cacheBackend.remove(relPath);\n}\n\nexport function clear() {\n  cacheBackend.clear();\n}\n","/*\n * Message types\n */\nconst MsgTypes = {\n  zbox: {\n    initEnv: {\n      name: 'initEnv',\n      arg: [{ debug: { type: 'boolean', optional: true } }],\n      optional: true\n    },\n    version: {\n      name: 'version',\n      arg: []\n    },\n    exists: {\n      name: 'exists',\n      arg: ['string']\n    },\n    openRepo: {\n      name: 'openRepo',\n      arg: [{\n        uri: { type: 'string' },\n        pwd: { type: 'string' },\n        opts: { type: 'object', optional: true }\n      }]\n    },\n    repairSuperBlock: {\n      name: 'repairSuperBlock',\n      arg: [{\n        uri: { type: 'string' },\n        pwd: { type: 'string' }\n      }]\n    }\n  },\n\n  repo: {\n    close: {\n      name: 'close',\n      arg: []\n    },\n    info: {\n      name: 'info',\n      arg: []\n    },\n    resetPassword: {\n      name: 'resetPassword',\n      arg: [\n        { oldPwd: { type: 'string' } },\n        { newPwd: { type: 'string' } }\n      ]\n    },\n    pathExists: {\n      name: 'pathExists',\n      arg: ['string']\n    },\n    isFile: {\n      name: 'isFile',\n      arg: ['string']\n    },\n    isDir: {\n      name: 'isDir',\n      arg: ['string']\n    },\n    createFile: {\n      name: 'createFile',\n      arg: ['string']\n    },\n    openFile: {\n      name: 'openFile',\n      arg: [\n        'string',\n        {\n          path: { type: 'boolean' },\n          opts: { type: 'object', optional: true }\n        }\n      ]\n    },\n    createDir: {\n      name: 'createDir',\n      arg: ['string']\n    },\n    createDirAll: {\n      name: 'createDirAll',\n      arg: ['string']\n    },\n    readDir: {\n      name: 'readDir',\n      arg: ['string']\n    },\n    metadata: {\n      name: 'metadata',\n      arg: ['string']\n    },\n    history: {\n      name: 'history',\n      arg: ['string']\n    },\n    copy: {\n      name: 'copy',\n      arg: [\n        { from: { type: 'string' } },\n        { to: { type: 'string' } }\n      ]\n    },\n    removeFile: {\n      name: 'removeFile',\n      arg: ['string']\n    },\n    removeDir: {\n      name: 'removeDir',\n      arg: ['string']\n    },\n    removeDirAll: {\n      name: 'removeDirAll',\n      arg: ['string']\n    },\n    rename: {\n      name: 'rename',\n      arg: [\n        { from: { type: 'string' } },\n        { to: { type: 'string' } }\n      ]\n    }\n  },\n\n  file: {\n    close: {\n      name: 'close',\n      arg: []\n    },\n    read: {\n      name: 'read',\n      arg: ['buffer']\n    },\n    readAll: {\n      name: 'readAll',\n      arg: []\n    },\n    readAllString: {\n      name: 'readAllString',\n      arg: []\n    },\n    write: {\n      name: 'write',\n      arg: ['string', 'buffer']\n    },\n    finish: {\n      name: 'finish',\n      arg: []\n    },\n    writeOnce: {\n      name: 'writeOnce',\n      arg: ['string', 'buffer']\n    },\n    seek: {\n      name: 'seek',\n      arg: [ {\n        from: { type: 'number' },\n        offset: { type: 'number' }\n      }]\n    },\n    setLen: {\n      name: 'setLen',\n      arg: ['number']\n    },\n    currVersion: {\n      name: 'currVersion',\n      arg: []\n    },\n    metadata: {\n      name: 'metadata',\n      arg: []\n    },\n    history: {\n      name: 'history',\n      arg: []\n    },\n    versionReader: {\n      name: 'versionReader',\n      arg: ['number']\n    }\n  },\n\n  versionReader: {\n    close: {\n      name: 'close',\n      arg: []\n    },\n    read: {\n      name: 'read',\n      arg: ['buffer']\n    },\n    readAll: {\n      name: 'readAll',\n      arg: []\n    },\n    readAllString: {\n      name: 'readAllString',\n      arg: []\n    },\n    seek: {\n      name: 'seek',\n      arg: [{\n        from: { type: 'number' },\n        offset: { type: 'number' }\n      }]\n    }\n  }\n};\n\nexport default MsgTypes;\n","// check if it is object\nexport function isObject(a) {\n  return a !== null && typeof a === 'object';\n}\n\n// check if it is number\nexport function isNumber(n) {\n  return typeof n === 'number';\n}\n\n// check if it is string\nexport function isString(s) {\n  return typeof s === 'string';\n}\n\n// check if it is array buffer view\nexport function isArrayBufferView(value) {\n  return value\n    && value.buffer instanceof ArrayBuffer\n    && value.byteLength !== undefined;\n}\n\n// convert ArrayBuffer to String\nexport function ab2str(buf) {\n  return String.fromCharCode.apply(null, new Uint16Array(buf));\n}\n\n// convert String to ArrayBuffer\nexport function str2ab(str) {\n  var buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  var bufView = new Uint16Array(buf);\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\n// ensure arg is string\nexport function ensureStr(s) {\n  if (typeof s !== 'string') {\n    throw 'Wrong argument, string required';\n  }\n}\n\n// ensure two args are string\nexport function ensureStr2(s, s2) {\n  if (typeof s !== 'string' || typeof s2 !== 'string') {\n    throw 'Wrong argument, string required';\n  }\n}\n\n// ensure one parameter is positive integer number\nexport function ensureInt(n) {\n  if (!Number.isInteger(n) || n < 0) {\n    throw 'Wrong argument, positive integer required';\n  }\n}\n\n// ensure one parameter is positive or negative integer number\nexport function ensureIntOrNeg(n) {\n  if (!Number.isInteger(n)) {\n    throw 'Wrong argument, integer required';\n  }\n}\n","import MsgTypes from \"./message\";\nimport { logger } from './logger';\nimport { cacheBackend } from './cache_backend';\nimport {\n  isString,\n  isObject,\n  ensureStr,\n  ensureStr2,\n  ensureInt,\n  ensureIntOrNeg,\n  ab2str\n} from \"./utils\";\n\n// global zbox and repo object\nlet zbox = null;\nlet repo = null;\n\n// opened objects\n// key: ptr integer number\n// value: opened object\nlet opened = {\n  files: {},      // files\n  vrdrs: {}       // version readers\n};\n\n// parse repo id in uri\nfunction parseRepoIdInUri(uri) {\n  const search = /^zbox:\\/\\/\\w+@(\\w+)/.exec(uri);\n  if (!search) {\n    throw 'Invalid Uri';\n  }\n  const repoId = search[1];\n  return repoId;\n}\n\n// parse cache type in uri\nfunction parseCacheType(uri) {\n  const search = /^zbox:\\/\\/\\w+@\\w+\\?.*cache_type=(\\w+).*/.exec(uri);\n  return search ? search[1] : undefined;\n}\n\nfunction zboxMsgHandler(msg, msgTypes) {\n  switch (msg.type) {\n    case msgTypes.initEnv.name: {\n      let debugOn = msg.params ? msg.params.debug : false;\n      logger.enable(debugOn);\n      import('./wasm/zbox')\n        .then(wasm => {\n          zbox = wasm;\n          zbox.init_env(debugOn);\n        })\n        .catch(err => {\n          logger.error(`Load ZboxFS wasm failed: ${err}`);\n          msg.error =  err;\n        })\n        .finally(() => postMessage(msg));\n      break;\n    }\n\n    case msgTypes.version.name: {\n      msg.result = zbox.zbox_version();\n      postMessage(msg);\n      break;\n    }\n\n    case msgTypes.exists.name: {\n      ensureStr(msg.params);\n      msg.result = zbox.Repo.exists(msg.params);\n      postMessage(msg);\n      break;\n    }\n\n    case msgTypes.openRepo.name: {\n      ensureStr2(msg.params.uri, msg.params.pwd);\n\n      // find repo id in uri\n      const repoId = parseRepoIdInUri(msg.params.uri);\n\n      // load local cache backend and then open repo\n      let loadCache;\n      if (parseCacheType(msg.params.uri) === 'mem') {\n        // no need to load cache for memory backend\n        loadCache = Promise.resolve();\n      } else {\n        loadCache = cacheBackend.open(repoId);\n      }\n      loadCache\n        .then(() => {\n          // create and config opener\n          let opener = new zbox.RepoOpener();\n          let opts = msg.params.opts || {};\n\n          if (opts.hasOwnProperty('create'))\n            opener.create(opts.create);\n          if (opts.hasOwnProperty('createNew'))\n            opener.createNew(opts.createNew);\n          if (opts.hasOwnProperty('compress'))\n            opener.compress(opts.compress);\n          if (opts.hasOwnProperty('versionLimit'))\n            opener.versionLimit(opts.versionLimit);\n          if (opts.hasOwnProperty('dedupChunk'))\n            opener.dedupChunk(opts.dedupChunk);\n          if (opts.hasOwnProperty('readOnly'))\n            opener.readOnly(opts.readOnly);\n\n          // open zbox\n          repo = opener.open(msg.params.uri, msg.params.pwd);\n        })\n        .catch(err => {\n          msg.error = err.toString();\n          cacheBackend.immediateClose();\n        })\n        .finally(() => postMessage(msg));\n\n      break;\n    }\n\n    case msgTypes.repairSuperBlock.name: {\n      ensureStr2(msg.params.uri, msg.params.pwd);\n      zbox.Repo.repairSuperBlock(msg.params.uri,\n          msg.params.pwd);\n      postMessage(msg);\n      break;\n    }\n  }\n}\n\nfunction repoMsgHandler(msg, msgTypes) {\n  switch (msg.type) {\n    case msgTypes.close.name: {\n      let cnt = Object.keys(opened.files).length;\n      if (cnt > 0) {\n        logger.warn(`${cnt} file(s) still opened when close repo`);\n      }\n      cnt = Object.keys(opened.vrdrs).length;\n      if (cnt > 0) {\n        logger.warn(`${cnt} version reader(s) still opened when close repo`);\n      }\n      repo.close();\n      cacheBackend.close()\n        .catch(err => msg.error = err)\n        .finally(() => postMessage(msg));\n      return;\n    }\n\n    case msgTypes.info.name: {\n      msg.result = repo.info();\n      break;\n    }\n\n    case msgTypes.resetPassword.name: {\n      ensureStr2(msg.params.oldPwd, msg.params.newPwd);\n      repo.resetPassword(msg.params.oldPwd, msg.params.newPwd);\n      break;\n    }\n\n    case msgTypes.pathExists.name: {\n      ensureStr(msg.params);\n      msg.result = repo.pathExists(msg.params);\n      break;\n    }\n\n    case msgTypes.isFile.name: {\n      ensureStr(msg.params);\n      msg.result = repo.isFile(msg.params);\n      break;\n    }\n\n    case msgTypes.isDir.name: {\n      ensureStr(msg.params);\n      msg.result = repo.isDir(msg.params);\n      break;\n    }\n\n    case msgTypes.createFile.name: {\n      ensureStr(msg.params);\n      let file = repo.createFile(msg.params);\n      opened.files[file.ptr] = file;\n      msg.result = file.ptr;\n      break;\n    }\n\n    case msgTypes.openFile.name: {\n      let file;\n\n      if (isString(msg.params)) {\n        file = repo.openFile(msg.params);\n\n      } else if (isObject(msg.params)) {\n        ensureStr(msg.params.path);\n\n        let opener = new zbox.OpenOptions();\n        let opts = msg.params.opts || {};\n        if (opts.hasOwnProperty('read')) opener.read(opts.read);\n        if (opts.hasOwnProperty('write')) opener.write(opts.write);\n        if (opts.hasOwnProperty('append')) opener.append(opts.append);\n        if (opts.hasOwnProperty('truncate')) opener.truncate(opts.truncate);\n        if (opts.hasOwnProperty('create')) opener.create(opts.create);\n        if (opts.hasOwnProperty('createNew')) opener.createNew(opts.createNew);\n        if (opts.hasOwnProperty('versionLimit')) opener.versionLimit(opts.versionLimit);\n        if (opts.hasOwnProperty('dedupChunk')) opener.dedupChunk(opts.dedupChunk);\n\n        file = opener.open(repo, msg.params.path);\n\n      } else {\n        throw 'Wrong argument, string or Object required';\n      }\n\n      opened.files[file.ptr] = file;\n      msg.result = file.ptr;\n\n      break;\n    }\n\n    case msgTypes.createDir.name: {\n      ensureStr(msg.params);\n      repo.createDir(msg.params);\n      break;\n    }\n\n    case msgTypes.createDirAll.name: {\n      ensureStr(msg.params);\n      repo.createDirAll(msg.params);\n      break;\n    }\n\n    case msgTypes.readDir.name: {\n      ensureStr(msg.params);\n      msg.result = repo.readDir(msg.params);\n      break;\n    }\n\n    case msgTypes.metadata.name: {\n      ensureStr(msg.params);\n      msg.result = repo.metadata(msg.params);\n      break;\n    }\n\n    case msgTypes.history.name: {\n      ensureStr(msg.params);\n      msg.result = repo.history(msg.params);\n      break;\n    }\n\n    case msgTypes.copy.name: {\n      ensureStr2(msg.params.from, msg.params.to);\n      repo.copy(msg.params.from, msg.params.to);\n      break;\n    }\n\n    case msgTypes.removeFile.name: {\n      ensureStr(msg.params);\n      repo.removeFile(msg.params);\n      break;\n    }\n\n    case msgTypes.removeDir.name: {\n      ensureStr(msg.params);\n      repo.removeDir(msg.params);\n      break;\n    }\n\n    case msgTypes.removeDirAll.name: {\n      ensureStr(msg.params);\n      repo.removeDirAll(msg.params);\n      break;\n    }\n\n    case msgTypes.rename.name: {\n      ensureStr2(msg.params.from, msg.params.to);\n      repo.rename(msg.params.from, msg.params.to);\n      break;\n    }\n  }\n\n  // send message back to main thread\n  postMessage(msg);\n}\n\nfunction fileMsgHandler(msg, msgTypes) {\n  let file = opened.files[msg.object];\n\n  if (file === undefined) {\n    throw 'File not opened';\n  }\n\n  // data bytes transfer buffer\n  let transBuf = null;\n\n  switch (msg.type) {\n    case msgTypes.close.name: {\n      file.close();\n      delete opened.files[msg.object];\n      break;\n    }\n\n    case msgTypes.read.name: {\n      let buf = new Uint8Array(msg.params.buf, msg.params.offset, msg.params.len);\n      const read = file.read(buf);\n      msg.result = {\n        buf: msg.params.buf,\n        offset: msg.params.offset,\n        len: read\n      };\n      transBuf = [msg.params.buf];\n      break;\n    }\n\n    case msgTypes.readAll.name: {\n      let dst = file.readAll();\n      msg.result = dst.buffer;\n      transBuf = [dst.buffer];\n      break;\n    }\n\n    case msgTypes.readAllString.name: {\n      let dst = file.readAll();\n      msg.result = ab2str(dst.buffer);\n      break;\n    }\n\n    case msgTypes.write.name: {\n      const buf = new Uint8Array(msg.params.buf, msg.params.offset, msg.params.len);\n      msg.result = file.write(buf);\n      break;\n    }\n\n    case msgTypes.finish.name: {\n      file.finish();\n      break;\n    }\n\n    case msgTypes.writeOnce.name: {\n      const buf = new Uint8Array(msg.params.buf, msg.params.offset, msg.params.len);\n      msg.result = file.writeOnce(buf);\n      break;\n    }\n\n    case msgTypes.seek.name: {\n      ensureInt(msg.params.from);\n      ensureIntOrNeg(msg.params.offset);\n      msg.result = file.seek(msg.params.from, msg.params.offset);\n      break;\n    }\n\n    case msgTypes.setLen.name: {\n      ensureInt(msg.params);\n      file.setLen(msg.params);\n      break;\n    }\n\n    case msgTypes.currVersion.name: {\n      msg.result = file.currVersion();\n      break;\n    }\n\n    case msgTypes.metadata.name: {\n      msg.result = file.metadata();\n      break;\n    }\n\n    case msgTypes.history.name: {\n      msg.result = file.history();\n      break;\n    }\n\n    case msgTypes.versionReader.name: {\n      ensureInt(msg.params);\n      const vrdr = file.versionReader(msg.params);\n      opened.vrdrs[vrdr.ptr] = vrdr;\n      msg.result = vrdr.ptr;\n      break;\n    }\n  }\n\n  // send message back to main thread\n  if (transBuf) {\n    postMessage(msg, transBuf);\n  } else {\n    postMessage(msg);\n  }\n}\n\nfunction versionReaderMsgHandler(msg, msgTypes) {\n  let vrdr = opened.vrdrs[msg.object];\n\n  if (vrdr == undefined) {\n    throw 'Version reader is closed';\n  }\n\n  // data bytes transfer buffer\n  let transBuf = null;\n\n  switch (msg.type) {\n    case msgTypes.close.name: {\n      vrdr.close();\n      delete opened.vrdrs[msg.object];\n      break;\n    }\n\n    case msgTypes.read.name: {\n      let buf = new Uint8Array(msg.params.buf, msg.params.offset, msg.params.len);\n      const read = vrdr.read(buf);\n      msg.result = {\n        buf: msg.params.buf,\n        offset: msg.params.offset,\n        len: read\n      };\n      transBuf = [msg.params.buf];\n      break;\n    }\n\n    case msgTypes.readAll.name: {\n      let dst = vrdr.readAll();\n      msg.result = dst.buffer;\n      transBuf = [dst.buffer];\n      break;\n    }\n\n    case msgTypes.readAllString.name: {\n      let dst = vrdr.readAll();\n      msg.result = ab2str(dst.buffer);\n      break;\n    }\n\n    case msgTypes.seek.name: {\n      ensureInt(msg.params.from);\n      ensureIntOrNeg(msg.params.offset);\n      msg.result = vrdr.seek(msg.params.from, msg.params.offset);\n      break;\n    }\n  }\n\n  // send message back to main thread\n  if (transBuf) {\n    postMessage(msg, transBuf);\n  } else {\n    postMessage(msg);\n  }\n}\n\nonmessage = function(event) {\n  let msg = event.data;\n  // console.log(`main -> worker: ${JSON.stringify(msg)}`);\n\n  // reset message result and error\n  msg.result = null;\n  msg.error = null;\n\n  // dispatch message\n  const msgTypes = MsgTypes[msg.scope];\n  try {\n    switch (msg.scope) {\n      case 'zbox': {\n        zboxMsgHandler(msg, msgTypes);\n        break;\n      }\n\n      case 'repo': {\n        repoMsgHandler(msg, msgTypes);\n        break;\n      }\n\n      case 'file': {\n        fileMsgHandler(msg, msgTypes);\n        break;\n      }\n\n      case 'versionReader': {\n        versionReaderMsgHandler(msg, msgTypes);\n        break;\n      }\n    }\n  } catch (err) {\n    msg.error = err;\n    postMessage(msg);\n  }\n};\n"],"sourceRoot":""}