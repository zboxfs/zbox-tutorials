{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker_logger.js","webpack:///./src/logger.js","webpack:///./src/cache_backend.js","webpack:///./src/message.js","webpack:///./src/utils.js","webpack:///./src/worker.js"],"names":["self","chunkIds","moreModules","moduleId","modules","length","installedChunks","pop","installedModules","0","installedWasmModules","wasmImportObjects","5","./zbox_wasm.js","__wbindgen_object_drop_ref","p0i32","exports","__wbindgen_string_new","p1i32","__wbindgen_json_parse","__wbg_contains_a441a63bfdfbf56b","__wbg_insert_9f4f4189898136d3","p2i32","__wbg_remove_c8ea50ae95b9837f","__wbg_clear_becb14ee647153dc","__wbg_get_0b8d6a5578871568","__wbindgen_is_undefined","__wbg_log_752412b34bee8ef1","p3i32","p4i32","p5i32","p6i32","p7i32","__widl_f_get_random_values_with_u8_array_Crypto","__widl_instanceof_WorkerGlobalScope","__widl_f_crypto_WorkerGlobalScope","__widl_f_new_XMLHttpRequest","__widl_f_get_all_response_headers_XMLHttpRequest","__widl_f_open_with_async_XMLHttpRequest","__widl_f_send_XMLHttpRequest","__widl_f_send_with_opt_buffer_source_XMLHttpRequest","__widl_f_set_request_header_XMLHttpRequest","__widl_f_ready_state_XMLHttpRequest","__widl_f_set_timeout_XMLHttpRequest","__widl_f_set_with_credentials_XMLHttpRequest","__widl_f_status_XMLHttpRequest","__widl_f_set_response_type_XMLHttpRequest","__widl_f_response_XMLHttpRequest","__wbg_call_836fa928f74337e5","__wbindgen_object_clone_ref","__wbg_newnoargs_8d1797b163dbc9fb","__wbg_now_d9ff59a9d063f1ca","__wbg_buffer_e04d67bf3bf41917","__wbg_newwithbyteoffsetandlength_9cfc37146f8a28ba","__wbg_length_cfa4a8dd9fc9bbfc","__wbg_new_c745db9584dd061d","__wbg_set_2cce886d07c10f52","__wbg_newwithbyteoffset_a1c84abd181cbef3","__wbg_subarray_07f305e5e1d4da82","__wbg_slice_983de3d1d0239bb6","__wbg_byteLength_0d95096ad2ff9f80","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_rethrow","__wbindgen_memory","__webpack_require__","module","i","l","call","e","chunkId","promises","push","Promise","resolve","then","importScripts","p","1","forEach","wasmModuleId","installedWasmModuleData","promise","importObject","req","fetch","WebAssembly","compileStreaming","all","items","instantiate","instantiateStreaming","x","arrayBuffer","bytes","res","w","instance","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","s","__webpack_exports__","logger","log","TRACE","DEBUG","INFO","WARN","ERROR","OFF","postLogMsg","level","msg","from","postMessage","scope","[object Object]","this","lvl","file","line","idx","lastIndexOf","substring","error","warn","info","debug","trace","base","style","loc","consoleLogger","fmt","output","console","opts","cfg","cacheBackend","contains","insert","remove","clear","LOCAL_CACHE_DB","db","storeName","map","Map","dbClosed","reject","ver","Math","floor","Date","now","indexedDB","open","onerror","event","onupgradeneeded","target","result","objectStoreNames","createObjectStore","keyPath","onsuccess","openDb","transaction","objectStore","getAll","errorCode","item","set","relPath","data","close","tx","onabort","oncomplete","store","put","has","delete","deleteObjectStore","deleteStore","slice","message","zbox","initEnv","arg","type","optional","version","exists","openRepo","uri","pwd","repairSuperBlock","repo","resetPassword","oldPwd","newPwd","pathExists","isFile","isDir","createFile","openFile","path","createDir","createDirAll","readDir","metadata","history","copy","to","removeFile","removeDir","removeDirAll","rename","read","readAll","readAllString","write","finish","writeOnce","seek","offset","setLen","currVersion","versionReader","ab2str","buf","String","fromCharCode","apply","Uint16Array","ensureStr","ensureStr2","s2","ensureInt","Number","isInteger","ensureIntOrNeg","opened","files","vrdrs","onmessage","msgTypes","worker_logger","setLevel","params","wasm","init_env","catch","err","finally","zbox_version","Repo","repoId","search","exec","parseRepoIdInUri","loadCache","undefined","parseCacheType","cache_backend","opener","RepoOpener","createNew","compress","versionLimit","dedupChunk","readOnly","immediateClose","zboxMsgHandler","cnt","keys","ptr","a","OpenOptions","append","truncate","repoMsgHandler","transBuf","Uint8Array","len","dst","buffer","vrdr","fileMsgHandler","versionReaderMsgHandler"],"mappings":"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","file":"worker.js","sourcesContent":[" \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t0: 1\n \t};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t5: function() {\n \t\t\treturn {\n \t\t\t\t\"./zbox_wasm.js\": {\n \t\t\t\t\t\"__wbindgen_object_drop_ref\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_object_drop_ref\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_string_new\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_string_new\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_json_parse\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_json_parse\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_contains_a441a63bfdfbf56b\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_contains_a441a63bfdfbf56b\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_insert_9f4f4189898136d3\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_insert_9f4f4189898136d3\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_remove_c8ea50ae95b9837f\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_remove_c8ea50ae95b9837f\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_clear_becb14ee647153dc\": function() {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_clear_becb14ee647153dc\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_get_0b8d6a5578871568\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_get_0b8d6a5578871568\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_is_undefined\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_is_undefined\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_log_752412b34bee8ef1\": function(p0i32,p1i32,p2i32,p3i32,p4i32,p5i32,p6i32,p7i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_log_752412b34bee8ef1\"](p0i32,p1i32,p2i32,p3i32,p4i32,p5i32,p6i32,p7i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_get_random_values_with_u8_array_Crypto\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_get_random_values_with_u8_array_Crypto\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_instanceof_WorkerGlobalScope\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_instanceof_WorkerGlobalScope\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_crypto_WorkerGlobalScope\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_crypto_WorkerGlobalScope\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_new_XMLHttpRequest\": function() {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_new_XMLHttpRequest\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_get_all_response_headers_XMLHttpRequest\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_get_all_response_headers_XMLHttpRequest\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_open_with_async_XMLHttpRequest\": function(p0i32,p1i32,p2i32,p3i32,p4i32,p5i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_open_with_async_XMLHttpRequest\"](p0i32,p1i32,p2i32,p3i32,p4i32,p5i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_send_XMLHttpRequest\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_send_XMLHttpRequest\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_send_with_opt_buffer_source_XMLHttpRequest\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_send_with_opt_buffer_source_XMLHttpRequest\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_set_request_header_XMLHttpRequest\": function(p0i32,p1i32,p2i32,p3i32,p4i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_set_request_header_XMLHttpRequest\"](p0i32,p1i32,p2i32,p3i32,p4i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_ready_state_XMLHttpRequest\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_ready_state_XMLHttpRequest\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_set_timeout_XMLHttpRequest\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_set_timeout_XMLHttpRequest\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_set_with_credentials_XMLHttpRequest\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_set_with_credentials_XMLHttpRequest\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_status_XMLHttpRequest\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_status_XMLHttpRequest\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_set_response_type_XMLHttpRequest\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_set_response_type_XMLHttpRequest\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__widl_f_response_XMLHttpRequest\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__widl_f_response_XMLHttpRequest\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_call_836fa928f74337e5\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_call_836fa928f74337e5\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_object_clone_ref\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_object_clone_ref\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newnoargs_8d1797b163dbc9fb\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_newnoargs_8d1797b163dbc9fb\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_now_d9ff59a9d063f1ca\": function() {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_now_d9ff59a9d063f1ca\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_buffer_e04d67bf3bf41917\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_buffer_e04d67bf3bf41917\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newwithbyteoffsetandlength_9cfc37146f8a28ba\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_newwithbyteoffsetandlength_9cfc37146f8a28ba\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_length_cfa4a8dd9fc9bbfc\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_length_cfa4a8dd9fc9bbfc\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_c745db9584dd061d\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_new_c745db9584dd061d\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_set_2cce886d07c10f52\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_set_2cce886d07c10f52\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newwithbyteoffset_a1c84abd181cbef3\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_newwithbyteoffset_a1c84abd181cbef3\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_subarray_07f305e5e1d4da82\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_subarray_07f305e5e1d4da82\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_slice_983de3d1d0239bb6\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_slice_983de3d1d0239bb6\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_byteLength_0d95096ad2ff9f80\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbg_byteLength_0d95096ad2ff9f80\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_debug_string\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_debug_string\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_throw\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_throw\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_rethrow\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_rethrow\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_memory\": function() {\n \t\t\t\t\t\treturn installedModules[3].exports[\"__wbindgen_memory\"]();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(__webpack_require__.p + \"\" + chunkId + \".worker.js\");\n \t\t\t}\n \t\t}));\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"1\":[5]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"5\":\"79e4f62cd0e5f17042b8\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","const TRACE = 1;\nconst DEBUG = 2;\nconst INFO = 3;\nconst WARN = 4;\nconst ERROR = 5;\nconst OFF = 99;\n\n// post log message to main thread\nfunction postLogMsg(level, msg, from) {\n  postMessage({\n    scope: 'log',\n    level,\n    msg: `${msg}`,\n    from: from || 'worker.js'\n  });\n}\n\n// worker logger\nclass WorkerLogger {\n  constructor(level) {\n    this.level = level || WARN;\n  }\n\n  setLevel(level) {\n    switch (level) {\n      case 'trace': this.level = TRACE; return level;\n      case 'debug': this.level = DEBUG; return level;\n      case 'info': this.level = INFO; return level;\n      case 'warn': this.level = WARN; return level;\n      case 'error': this.level = ERROR; return level;\n      case 'off': this.level = OFF; return level;\n      default: this.level = WARN; return 'warn';\n    }\n  }\n\n  trace(msg, from) {\n    if (this.level <= TRACE) postLogMsg('trace', msg, from);\n  }\n\n  debug(msg, from) {\n    if (this.level <= DEBUG) postLogMsg('debug', msg, from);\n  }\n\n  info(msg, from) {\n    if (this.level <= INFO) postLogMsg('info', msg, from);\n  }\n\n  warn(msg, from) {\n    if (this.level <= WARN) postLogMsg('warn', msg, from);\n  }\n\n  error(msg, from) {\n    if (this.level <= ERROR) postLogMsg('error', msg, from);\n  }\n}\n\nexport let logger = new WorkerLogger();\n\n// --------------------------\n// export functions for wasm\n// --------------------------\nexport function log(lvl, file, line, msg) {\n  // suppress common prefix in file name\n  const idx = file.lastIndexOf('/src/');\n  const from = `${file.substring(idx + 5)}:${line}`;\n\n  switch (lvl) {\n    case 'ERROR':\n      logger.error(msg, from);\n      break;\n    case 'WARN':\n      logger.warn(msg, from);\n      break;\n    case 'INFO':\n      logger.info(msg, from);\n      break;\n    case 'DEBUG':\n      logger.debug(msg, from);\n      break;\n    case 'TRACE':\n      logger.trace(msg, from);\n      break;\n  }\n}\n","const TRACE = 1;\nconst DEBUG = 2;\nconst INFO = 3;\nconst WARN = 4;\nconst ERROR = 5;\nconst OFF = 99;\n\n// log style definitions\nconst base = 'color: white; padding: 0 3px; width: 4em; display: inline-block; text-align: center; background: ';\nconst style = {\n  lvl: {\n    error: base + 'darkred',\n    warn: base + 'orange',\n    info: base + 'green',\n    debug: base + 'blue',\n    trace: base + 'gray'\n  },\n  loc: 'font-weight: bold; color: inherit; opacity: 0.5;',\n  msg: 'background: inherit; color: inherit'\n};\n\n// console logger\nfunction consoleLogger(level, msg, from) {\n  const loc = from || 'index.js';\n  const fmt = `[%c${level}%c ${loc}%c] ${msg}`;\n  let output;\n  switch (level) {\n    case 'trace': output = console.log; break;\n    case 'debug': output = console.debug; break;\n    case 'info': output = console.info; break;\n    case 'warn': output = console.warn; break;\n    case 'error': output = console.error; break;\n    default: output = console.log; break;\n  }\n  output(fmt, style.lvl[level], style.loc, style.msg);\n}\n\n// logger\nclass Logger {\n  constructor() {\n    this.level = WARN;\n    this.output = null;\n  }\n\n  config(opts) {\n    let cfg = opts || {};\n\n    const level = cfg.level || 'warn';\n    switch (level) {\n      case 'trace': this.level = TRACE; break;\n      case 'debug': this.level = DEBUG; break;\n      case 'info': this.level = INFO; break;\n      case 'warn': this.level = WARN; break;\n      case 'error': this.level = ERROR; break;\n      case 'off': this.level = OFF; break;\n      default: this.level = WARN; break;\n    }\n\n    this.output = cfg.logger || consoleLogger;\n  }\n\n  trace(msg, from) {\n    if (this.level <= TRACE) this.output('trace', msg, from);\n  }\n\n  debug(msg, from) {\n    if (this.level <= DEBUG) this.output('debug', msg, from);\n  }\n\n  info(msg, from) {\n    if (this.level <= INFO) this.output('info', msg, from);\n  }\n\n  warn(msg, from) {\n    if (this.level <= WARN) this.output('warn', msg, from);\n  }\n\n  error(msg, from) {\n    if (this.level <= ERROR) this.output('error', msg, from);\n  }\n}\n\nexport let logger = new Logger();\n","import { logger } from './logger';\n\n// local cache db name\nconst LOCAL_CACHE_DB = 'zbox_local_cache';\n\n// open cache backend database\nfunction openDb(storeName) {\n  return new Promise((resolve, reject) => {\n    const ver = Math.floor(Date.now() / 1000);\n    let req = indexedDB.open(LOCAL_CACHE_DB, ver);\n\n    req.onerror = (event) => {\n      reject('IndexedDB is forbidden to use');\n    };\n\n    req.onupgradeneeded = (event) => {\n      let db = event.target.result;\n      if (!db.objectStoreNames.contains(storeName)) {\n        db.createObjectStore(storeName, {\n          keyPath: 'relPath'\n        });\n      }\n    };\n\n    req.onsuccess = (event) => {\n      resolve(event.target.result);\n    };\n  });\n}\n\n// delete store in database\nfunction deleteStore(storeName) {\n  return new Promise((resolve, reject) => {\n    const ver = Math.floor(Date.now() / 1000);\n    let req = indexedDB.open(LOCAL_CACHE_DB, ver);\n\n    req.onerror = (event) => {\n      reject('IndexedDB is forbidden to use');\n    };\n\n    req.onupgradeneeded = (event) => {\n      let db = event.target.result;\n      if (db.objectStoreNames.contains(storeName)) {\n        db.deleteObjectStore(storeName);\n      }\n      resolve();\n    };\n\n    req.onsuccess = (event) => {\n      let db = event.target.result;\n      db.close();\n    };\n  });\n}\n\n// local cache backend\nclass CacheBackend {\n  constructor() {\n    this.db = null;\n    this.storeName = null;\n    this.map= new Map();\n    this.dbClosed = true;\n  }\n\n  open(storeName) {\n    let self = this;\n\n    return openDb(storeName)\n      .then(db => {\n        self.db = db;\n        self.storeName = storeName;\n\n        return new Promise((resolve, reject) => {\n          // load all items in local cache db into memory map\n          let req = self.db.transaction(storeName, 'readonly')\n            .objectStore(storeName)\n            .getAll();\n          req.onerror = (event) => {\n            reject('Database error: ' + event.target.errorCode);\n          };\n          req.onsuccess = (event) => {\n            let items = event.target.result;\n            items.forEach(item => {\n              self.map.set(item.relPath, item.data);\n            });\n            logger.debug(`Cache backend opened: ${items.length} cache items loaded`);\n            self.dbClosed = false;\n            resolve();\n          };\n        });\n      });\n  }\n\n  // immediate close database withouth saving data\n  immediateClose() {\n    if (!this.dbClosed) {\n      this.db.close();\n      this.storeName = null;\n      this.map.clear();\n      this.dbClosed = true;\n    }\n  }\n\n  close() {\n    let self = this;\n\n    if (self.dbClosed) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n      let tx = self.db.transaction(self.storeName, 'readwrite');\n\n      tx.onabort = (event) => {\n        self.map.clear();\n        reject('Database tx aborted: ' + event.target.errorCode);\n      };\n      tx.onerror = (event) => {\n        self.map.clear();\n        reject('Database tx error: ' + event.target.errorCode);\n      };\n      tx.oncomplete = (event) => {\n        self.map.clear();\n        self.dbClosed = true;\n        resolve();\n      };\n\n      let store = tx.objectStore(self.storeName);\n\n      // clear all store then save all items from memory map\n      store.clear();\n      self.map.forEach((value, key) => {\n        store.put({ relPath: key, data: value });\n      });\n\n      self.db.close();\n    });\n  }\n\n  contains(relPath) {\n    return this.map.has(relPath);\n  }\n\n  get(relPath) {\n    return this.map.get(relPath);\n  }\n\n  insert(relPath, data) {\n    this.map.set(relPath, data);\n  }\n\n  remove(relPath) {\n    this.map.delete(relPath);\n  }\n\n  clear() {\n    this.map.clear();\n\n    let req = this.db.transaction(this.storeName, \"readwrite\")\n      .objectStore(this.storeName)\n      .clear();\n    req.onerror = (event) => {\n      logger.error('Clear local cache failed ' + event.target.errorCode);\n    };\n  }\n\n  destroy(storeName) {\n    return deleteStore(storeName);\n  }\n}\n\nexport let cacheBackend = new CacheBackend();\n\n// --------------------------\n// export functions for wasm\n// --------------------------\nexport function contains(relPath) {\n  return cacheBackend.contains(relPath);\n}\n\nexport function get(relPath) {\n  return cacheBackend.get(relPath);\n}\n\nexport function insert(relPath, data) {\n  cacheBackend.insert(relPath, data.slice());\n}\n\nexport function remove(relPath) {\n  cacheBackend.remove(relPath);\n}\n\nexport function clear() {\n  cacheBackend.clear();\n}\n","/*\n * Message types\n */\nconst MsgTypes = {\n  zbox: {\n    initEnv: {\n      name: 'initEnv',\n      arg: [{ debug: { type: 'boolean', optional: true } }],\n      optional: true\n    },\n    version: {\n      name: 'version',\n      arg: []\n    },\n    exists: {\n      name: 'exists',\n      arg: ['string']\n    },\n    openRepo: {\n      name: 'openRepo',\n      arg: [{\n        uri: { type: 'string' },\n        pwd: { type: 'string' },\n        opts: { type: 'object', optional: true }\n      }]\n    },\n    repairSuperBlock: {\n      name: 'repairSuperBlock',\n      arg: [{\n        uri: { type: 'string' },\n        pwd: { type: 'string' }\n      }]\n    }\n  },\n\n  repo: {\n    close: {\n      name: 'close',\n      arg: []\n    },\n    info: {\n      name: 'info',\n      arg: []\n    },\n    resetPassword: {\n      name: 'resetPassword',\n      arg: [\n        { oldPwd: { type: 'string' } },\n        { newPwd: { type: 'string' } }\n      ]\n    },\n    pathExists: {\n      name: 'pathExists',\n      arg: ['string']\n    },\n    isFile: {\n      name: 'isFile',\n      arg: ['string']\n    },\n    isDir: {\n      name: 'isDir',\n      arg: ['string']\n    },\n    createFile: {\n      name: 'createFile',\n      arg: ['string']\n    },\n    openFile: {\n      name: 'openFile',\n      arg: [\n        'string',\n        {\n          path: { type: 'boolean' },\n          opts: { type: 'object', optional: true }\n        }\n      ]\n    },\n    createDir: {\n      name: 'createDir',\n      arg: ['string']\n    },\n    createDirAll: {\n      name: 'createDirAll',\n      arg: ['string']\n    },\n    readDir: {\n      name: 'readDir',\n      arg: ['string']\n    },\n    metadata: {\n      name: 'metadata',\n      arg: ['string']\n    },\n    history: {\n      name: 'history',\n      arg: ['string']\n    },\n    copy: {\n      name: 'copy',\n      arg: [\n        { from: { type: 'string' } },\n        { to: { type: 'string' } }\n      ]\n    },\n    removeFile: {\n      name: 'removeFile',\n      arg: ['string']\n    },\n    removeDir: {\n      name: 'removeDir',\n      arg: ['string']\n    },\n    removeDirAll: {\n      name: 'removeDirAll',\n      arg: ['string']\n    },\n    rename: {\n      name: 'rename',\n      arg: [\n        { from: { type: 'string' } },\n        { to: { type: 'string' } }\n      ]\n    }\n  },\n\n  file: {\n    close: {\n      name: 'close',\n      arg: []\n    },\n    read: {\n      name: 'read',\n      arg: ['buffer']\n    },\n    readAll: {\n      name: 'readAll',\n      arg: []\n    },\n    readAllString: {\n      name: 'readAllString',\n      arg: []\n    },\n    write: {\n      name: 'write',\n      arg: ['string', 'buffer']\n    },\n    finish: {\n      name: 'finish',\n      arg: []\n    },\n    writeOnce: {\n      name: 'writeOnce',\n      arg: ['string', 'buffer']\n    },\n    seek: {\n      name: 'seek',\n      arg: [ {\n        from: { type: 'number' },\n        offset: { type: 'number' }\n      }]\n    },\n    setLen: {\n      name: 'setLen',\n      arg: ['number']\n    },\n    currVersion: {\n      name: 'currVersion',\n      arg: []\n    },\n    metadata: {\n      name: 'metadata',\n      arg: []\n    },\n    history: {\n      name: 'history',\n      arg: []\n    },\n    versionReader: {\n      name: 'versionReader',\n      arg: ['number']\n    }\n  },\n\n  versionReader: {\n    close: {\n      name: 'close',\n      arg: []\n    },\n    read: {\n      name: 'read',\n      arg: ['buffer']\n    },\n    readAll: {\n      name: 'readAll',\n      arg: []\n    },\n    readAllString: {\n      name: 'readAllString',\n      arg: []\n    },\n    seek: {\n      name: 'seek',\n      arg: [{\n        from: { type: 'number' },\n        offset: { type: 'number' }\n      }]\n    }\n  }\n};\n\nexport default MsgTypes;\n","// check if it is object\nexport function isObject(a) {\n  return a !== null && typeof a === 'object';\n}\n\n// check if it is number\nexport function isNumber(n) {\n  return typeof n === 'number';\n}\n\n// check if it is string\nexport function isString(s) {\n  return typeof s === 'string';\n}\n\n// check if it is array buffer view\nexport function isArrayBufferView(value) {\n  return value\n    && value.buffer instanceof ArrayBuffer\n    && value.byteLength !== undefined;\n}\n\n// convert ArrayBuffer to String\nexport function ab2str(buf) {\n  return String.fromCharCode.apply(null, new Uint16Array(buf));\n}\n\n// convert String to ArrayBuffer\nexport function str2ab(str) {\n  var buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  var bufView = new Uint16Array(buf);\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\n// ensure arg is string\nexport function ensureStr(s) {\n  if (typeof s !== 'string') {\n    throw 'Wrong argument, string required';\n  }\n}\n\n// ensure two args are string\nexport function ensureStr2(s, s2) {\n  if (typeof s !== 'string' || typeof s2 !== 'string') {\n    throw 'Wrong argument, string required';\n  }\n}\n\n// ensure one parameter is positive integer number\nexport function ensureInt(n) {\n  if (!Number.isInteger(n) || n < 0) {\n    throw 'Wrong argument, positive integer required';\n  }\n}\n\n// ensure one parameter is positive or negative integer number\nexport function ensureIntOrNeg(n) {\n  if (!Number.isInteger(n)) {\n    throw 'Wrong argument, integer required';\n  }\n}\n","import MsgTypes from \"./message\";\nimport { logger } from './worker_logger';\nimport { cacheBackend } from './cache_backend';\nimport {\n  isString,\n  isObject,\n  ensureStr,\n  ensureStr2,\n  ensureInt,\n  ensureIntOrNeg,\n  ab2str\n} from \"./utils\";\n\n// global zbox and repo object\nlet zbox = null;\nlet repo = null;\n\n// opened objects\n// key: ptr integer number\n// value: opened object\nlet opened = {\n  files: {},      // files\n  vrdrs: {}       // version readers\n};\n\n// parse repo id in uri\nfunction parseRepoIdInUri(uri) {\n  const search = /^zbox:\\/\\/\\w+@(\\w+)/.exec(uri);\n  if (!search) {\n    throw 'Invalid Uri';\n  }\n  const repoId = search[1];\n  return repoId;\n}\n\n// parse cache type in uri\nfunction parseCacheType(uri) {\n  const search = /^zbox:\\/\\/\\w+@\\w+\\?.*cache_type=(\\w+).*/.exec(uri);\n  return search ? search[1] : undefined;\n}\n\nfunction zboxMsgHandler(msg, msgTypes) {\n  switch (msg.type) {\n    case msgTypes.initEnv.name: {\n      let level = logger.setLevel(\n        (msg.params && msg.params.log) ? msg.params.log.level : 'warn'\n      );\n      import('./wasm/zbox_wasm')\n        .then(wasm => {\n          zbox = wasm;\n          zbox.init_env(level);\n        })\n        .catch(err => {\n          logger.error(`load ZboxFS wasm failed: ${err}`);\n          msg.error = `${err}`;\n        })\n        .finally(() => postMessage(msg));\n      return;\n    }\n\n    case msgTypes.version.name: {\n      msg.result = zbox.zbox_version();\n      postMessage(msg);\n      break;\n    }\n\n    case msgTypes.exists.name: {\n      ensureStr(msg.params);\n      msg.result = zbox.Repo.exists(msg.params);\n      postMessage(msg);\n      return;\n    }\n\n    case msgTypes.openRepo.name: {\n      ensureStr2(msg.params.uri, msg.params.pwd);\n\n      // find repo id in uri\n      const repoId = parseRepoIdInUri(msg.params.uri);\n\n      // load local cache backend and then open repo\n      let loadCache;\n      if (parseCacheType(msg.params.uri) === 'mem') {\n        // no need to load cache for memory backend\n        loadCache = Promise.resolve();\n      } else {\n        loadCache = cacheBackend.open(repoId);\n      }\n      loadCache\n        .then(() => {\n          // create and config opener\n          let opener = new zbox.RepoOpener();\n          let opts = msg.params.opts || {};\n\n          if (opts.hasOwnProperty('create'))\n            opener.create(opts.create);\n          if (opts.hasOwnProperty('createNew'))\n            opener.createNew(opts.createNew);\n          if (opts.hasOwnProperty('compress'))\n            opener.compress(opts.compress);\n          if (opts.hasOwnProperty('versionLimit'))\n            opener.versionLimit(opts.versionLimit);\n          if (opts.hasOwnProperty('dedupChunk'))\n            opener.dedupChunk(opts.dedupChunk);\n          if (opts.hasOwnProperty('readOnly'))\n            opener.readOnly(opts.readOnly);\n\n          // open zbox\n          repo = opener.open(msg.params.uri, msg.params.pwd);\n        })\n        .catch(err => {\n          logger.error(`open repo failed: ${err}`);\n          msg.error = `${err}`;\n          cacheBackend.immediateClose();\n        })\n        .finally(() => postMessage(msg));\n\n      return;\n    }\n\n    case msgTypes.repairSuperBlock.name: {\n      ensureStr2(msg.params.uri, msg.params.pwd);\n      zbox.Repo.repairSuperBlock(msg.params.uri,\n          msg.params.pwd);\n      postMessage(msg);\n      return;\n    }\n  }\n}\n\nfunction repoMsgHandler(msg, msgTypes) {\n  switch (msg.type) {\n    case msgTypes.close.name: {\n      let cnt = Object.keys(opened.files).length;\n      if (cnt > 0) {\n        logger.warn(`${cnt} file(s) still opened when close repo`);\n      }\n      cnt = Object.keys(opened.vrdrs).length;\n      if (cnt > 0) {\n        logger.warn(`${cnt} version reader(s) still opened when close repo`);\n      }\n      repo.close();\n      cacheBackend.close()\n        .catch(err => {\n          logger.error(`close local cache failed: ${err}`);\n          msg.error = `${err}`;\n        })\n        .finally(() => postMessage(msg));\n      return;\n    }\n\n    case msgTypes.info.name: {\n      msg.result = repo.info();\n      break;\n    }\n\n    case msgTypes.resetPassword.name: {\n      ensureStr2(msg.params.oldPwd, msg.params.newPwd);\n      repo.resetPassword(msg.params.oldPwd, msg.params.newPwd);\n      break;\n    }\n\n    case msgTypes.pathExists.name: {\n      ensureStr(msg.params);\n      msg.result = repo.pathExists(msg.params);\n      break;\n    }\n\n    case msgTypes.isFile.name: {\n      ensureStr(msg.params);\n      msg.result = repo.isFile(msg.params);\n      break;\n    }\n\n    case msgTypes.isDir.name: {\n      ensureStr(msg.params);\n      msg.result = repo.isDir(msg.params);\n      break;\n    }\n\n    case msgTypes.createFile.name: {\n      ensureStr(msg.params);\n      let file = repo.createFile(msg.params);\n      opened.files[file.ptr] = file;\n      msg.result = file.ptr;\n      break;\n    }\n\n    case msgTypes.openFile.name: {\n      let file;\n\n      if (isString(msg.params)) {\n        file = repo.openFile(msg.params);\n\n      } else if (isObject(msg.params)) {\n        ensureStr(msg.params.path);\n\n        let opener = new zbox.OpenOptions();\n        let opts = msg.params.opts || {};\n        if (opts.hasOwnProperty('read')) opener.read(opts.read);\n        if (opts.hasOwnProperty('write')) opener.write(opts.write);\n        if (opts.hasOwnProperty('append')) opener.append(opts.append);\n        if (opts.hasOwnProperty('truncate')) opener.truncate(opts.truncate);\n        if (opts.hasOwnProperty('create')) opener.create(opts.create);\n        if (opts.hasOwnProperty('createNew')) opener.createNew(opts.createNew);\n        if (opts.hasOwnProperty('versionLimit')) opener.versionLimit(opts.versionLimit);\n        if (opts.hasOwnProperty('dedupChunk')) opener.dedupChunk(opts.dedupChunk);\n\n        file = opener.open(repo, msg.params.path);\n\n      } else {\n        throw 'Wrong argument, string or Object required';\n      }\n\n      opened.files[file.ptr] = file;\n      msg.result = file.ptr;\n\n      break;\n    }\n\n    case msgTypes.createDir.name: {\n      ensureStr(msg.params);\n      repo.createDir(msg.params);\n      break;\n    }\n\n    case msgTypes.createDirAll.name: {\n      ensureStr(msg.params);\n      repo.createDirAll(msg.params);\n      break;\n    }\n\n    case msgTypes.readDir.name: {\n      ensureStr(msg.params);\n      msg.result = repo.readDir(msg.params);\n      break;\n    }\n\n    case msgTypes.metadata.name: {\n      ensureStr(msg.params);\n      msg.result = repo.metadata(msg.params);\n      break;\n    }\n\n    case msgTypes.history.name: {\n      ensureStr(msg.params);\n      msg.result = repo.history(msg.params);\n      break;\n    }\n\n    case msgTypes.copy.name: {\n      ensureStr2(msg.params.from, msg.params.to);\n      repo.copy(msg.params.from, msg.params.to);\n      break;\n    }\n\n    case msgTypes.removeFile.name: {\n      ensureStr(msg.params);\n      repo.removeFile(msg.params);\n      break;\n    }\n\n    case msgTypes.removeDir.name: {\n      ensureStr(msg.params);\n      repo.removeDir(msg.params);\n      break;\n    }\n\n    case msgTypes.removeDirAll.name: {\n      ensureStr(msg.params);\n      repo.removeDirAll(msg.params);\n      break;\n    }\n\n    case msgTypes.rename.name: {\n      ensureStr2(msg.params.from, msg.params.to);\n      repo.rename(msg.params.from, msg.params.to);\n      break;\n    }\n  }\n\n  // send message back to main thread\n  postMessage(msg);\n}\n\nfunction fileMsgHandler(msg, msgTypes) {\n  let file = opened.files[msg.object];\n\n  if (file === undefined) {\n    throw 'File not opened';\n  }\n\n  // data bytes transfer buffer\n  let transBuf = null;\n\n  switch (msg.type) {\n    case msgTypes.close.name: {\n      file.close();\n      delete opened.files[msg.object];\n      break;\n    }\n\n    case msgTypes.read.name: {\n      let buf = new Uint8Array(msg.params.buf, msg.params.offset, msg.params.len);\n      const read = file.read(buf);\n      msg.result = {\n        buf: msg.params.buf,\n        offset: msg.params.offset,\n        len: read\n      };\n      transBuf = [msg.params.buf];\n      break;\n    }\n\n    case msgTypes.readAll.name: {\n      let dst = file.readAll();\n      msg.result = dst.buffer;\n      transBuf = [dst.buffer];\n      break;\n    }\n\n    case msgTypes.readAllString.name: {\n      let dst = file.readAll();\n      msg.result = ab2str(dst.buffer);\n      break;\n    }\n\n    case msgTypes.write.name: {\n      const buf = new Uint8Array(msg.params.buf, msg.params.offset, msg.params.len);\n      msg.result = file.write(buf);\n      break;\n    }\n\n    case msgTypes.finish.name: {\n      file.finish();\n      break;\n    }\n\n    case msgTypes.writeOnce.name: {\n      const buf = new Uint8Array(msg.params.buf, msg.params.offset, msg.params.len);\n      msg.result = file.writeOnce(buf);\n      break;\n    }\n\n    case msgTypes.seek.name: {\n      ensureInt(msg.params.from);\n      ensureIntOrNeg(msg.params.offset);\n      msg.result = file.seek(msg.params.from, msg.params.offset);\n      break;\n    }\n\n    case msgTypes.setLen.name: {\n      ensureInt(msg.params);\n      file.setLen(msg.params);\n      break;\n    }\n\n    case msgTypes.currVersion.name: {\n      msg.result = file.currVersion();\n      break;\n    }\n\n    case msgTypes.metadata.name: {\n      msg.result = file.metadata();\n      break;\n    }\n\n    case msgTypes.history.name: {\n      msg.result = file.history();\n      break;\n    }\n\n    case msgTypes.versionReader.name: {\n      ensureInt(msg.params);\n      const vrdr = file.versionReader(msg.params);\n      opened.vrdrs[vrdr.ptr] = vrdr;\n      msg.result = vrdr.ptr;\n      break;\n    }\n  }\n\n  // send message back to main thread\n  if (transBuf) {\n    postMessage(msg, transBuf);\n  } else {\n    postMessage(msg);\n  }\n}\n\nfunction versionReaderMsgHandler(msg, msgTypes) {\n  let vrdr = opened.vrdrs[msg.object];\n\n  if (vrdr == undefined) {\n    throw 'Version reader is closed';\n  }\n\n  // data bytes transfer buffer\n  let transBuf = null;\n\n  switch (msg.type) {\n    case msgTypes.close.name: {\n      vrdr.close();\n      delete opened.vrdrs[msg.object];\n      break;\n    }\n\n    case msgTypes.read.name: {\n      let buf = new Uint8Array(msg.params.buf, msg.params.offset, msg.params.len);\n      const read = vrdr.read(buf);\n      msg.result = {\n        buf: msg.params.buf,\n        offset: msg.params.offset,\n        len: read\n      };\n      transBuf = [msg.params.buf];\n      break;\n    }\n\n    case msgTypes.readAll.name: {\n      let dst = vrdr.readAll();\n      msg.result = dst.buffer;\n      transBuf = [dst.buffer];\n      break;\n    }\n\n    case msgTypes.readAllString.name: {\n      let dst = vrdr.readAll();\n      msg.result = ab2str(dst.buffer);\n      break;\n    }\n\n    case msgTypes.seek.name: {\n      ensureInt(msg.params.from);\n      ensureIntOrNeg(msg.params.offset);\n      msg.result = vrdr.seek(msg.params.from, msg.params.offset);\n      break;\n    }\n  }\n\n  // send message back to main thread\n  if (transBuf) {\n    postMessage(msg, transBuf);\n  } else {\n    postMessage(msg);\n  }\n}\n\nonmessage = function(event) {\n  let msg = event.data;\n  // console.log(`main -> worker: ${JSON.stringify(msg)}`);\n\n  // reset message result and error\n  msg.result = null;\n  msg.error = null;\n\n  // dispatch message\n  const msgTypes = MsgTypes[msg.scope];\n  try {\n    switch (msg.scope) {\n      case 'zbox': {\n        zboxMsgHandler(msg, msgTypes);\n        break;\n      }\n\n      case 'repo': {\n        repoMsgHandler(msg, msgTypes);\n        break;\n      }\n\n      case 'file': {\n        fileMsgHandler(msg, msgTypes);\n        break;\n      }\n\n      case 'versionReader': {\n        versionReaderMsgHandler(msg, msgTypes);\n        break;\n      }\n    }\n  } catch (err) {\n    logger.error(err);\n    msg.error = `${err}`;\n    postMessage(msg);\n  }\n};\n"],"sourceRoot":""}