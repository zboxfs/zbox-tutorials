{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/message.js","webpack:///./src/logger.js","webpack:///./src/utils.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","message","zbox","initEnv","arg","debug","type","optional","version","exists","openRepo","uri","pwd","opts","repairSuperBlock","repo","close","info","resetPassword","oldPwd","newPwd","pathExists","isFile","isDir","createFile","openFile","path","createDir","createDirAll","readDir","metadata","history","copy","from","to","removeFile","removeDir","removeDirAll","rename","file","read","readAll","readAllString","write","finish","writeOnce","seek","offset","setLen","currVersion","versionReader","TRACE","DEBUG","INFO","WARN","ERROR","OFF","logger","[object Object]","level","this","msg","console","log","warn","error","isObject","__webpack_exports__","src_Zbox","ctx","resolver","worker","getParamsType","params","buffer","ArrayBuffer","undefined","byteLength","src_Base","scope","msgType","paramsType","argIsOptional","decl","find","argType","length","Promise","reject","Error","keys","some","setLevel","logLevel","transBuf","buf","str","bufView","Uint16Array","strLen","charCodeAt","str2ab","byteOffset","len","self","resolve","add","postMessage","src_Repo","super","forEach","_bindMsg","src_File","fd","src_VersionReader","vrdr","src_Resolver","map","reduce","accum","curr","event","data","err","msgTypes","result","Uint8Array","workerPath","document","currentScript","src","replace","wasmSupported","WebAssembly","instantiate","Module","of","Instance","e","Worker","indexedDB","onmessage","onerror","JSON","stringify","SeekFrom","Start","End","Current","terminate"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*\n * Message types\n */\nconst MsgTypes = {\n  zbox: {\n    initEnv: {\n      name: 'initEnv',\n      arg: [{ debug: { type: 'boolean', optional: true } }],\n      optional: true\n    },\n    version: {\n      name: 'version',\n      arg: []\n    },\n    exists: {\n      name: 'exists',\n      arg: ['string']\n    },\n    openRepo: {\n      name: 'openRepo',\n      arg: [{\n        uri: { type: 'string' },\n        pwd: { type: 'string' },\n        opts: { type: 'object', optional: true }\n      }]\n    },\n    repairSuperBlock: {\n      name: 'repairSuperBlock',\n      arg: [{\n        uri: { type: 'string' },\n        pwd: { type: 'string' }\n      }]\n    }\n  },\n\n  repo: {\n    close: {\n      name: 'close',\n      arg: []\n    },\n    info: {\n      name: 'info',\n      arg: []\n    },\n    resetPassword: {\n      name: 'resetPassword',\n      arg: [\n        { oldPwd: { type: 'string' } },\n        { newPwd: { type: 'string' } }\n      ]\n    },\n    pathExists: {\n      name: 'pathExists',\n      arg: ['string']\n    },\n    isFile: {\n      name: 'isFile',\n      arg: ['string']\n    },\n    isDir: {\n      name: 'isDir',\n      arg: ['string']\n    },\n    createFile: {\n      name: 'createFile',\n      arg: ['string']\n    },\n    openFile: {\n      name: 'openFile',\n      arg: [\n        'string',\n        {\n          path: { type: 'boolean' },\n          opts: { type: 'object', optional: true }\n        }\n      ]\n    },\n    createDir: {\n      name: 'createDir',\n      arg: ['string']\n    },\n    createDirAll: {\n      name: 'createDirAll',\n      arg: ['string']\n    },\n    readDir: {\n      name: 'readDir',\n      arg: ['string']\n    },\n    metadata: {\n      name: 'metadata',\n      arg: ['string']\n    },\n    history: {\n      name: 'history',\n      arg: ['string']\n    },\n    copy: {\n      name: 'copy',\n      arg: [\n        { from: { type: 'string' } },\n        { to: { type: 'string' } }\n      ]\n    },\n    removeFile: {\n      name: 'removeFile',\n      arg: ['string']\n    },\n    removeDir: {\n      name: 'removeDir',\n      arg: ['string']\n    },\n    removeDirAll: {\n      name: 'removeDirAll',\n      arg: ['string']\n    },\n    rename: {\n      name: 'rename',\n      arg: [\n        { from: { type: 'string' } },\n        { to: { type: 'string' } }\n      ]\n    }\n  },\n\n  file: {\n    close: {\n      name: 'close',\n      arg: []\n    },\n    read: {\n      name: 'read',\n      arg: ['buffer']\n    },\n    readAll: {\n      name: 'readAll',\n      arg: []\n    },\n    readAllString: {\n      name: 'readAllString',\n      arg: []\n    },\n    write: {\n      name: 'write',\n      arg: ['string', 'buffer']\n    },\n    finish: {\n      name: 'finish',\n      arg: []\n    },\n    writeOnce: {\n      name: 'writeOnce',\n      arg: ['string', 'buffer']\n    },\n    seek: {\n      name: 'seek',\n      arg: [ {\n        from: { type: 'number' },\n        offset: { type: 'number' }\n      }]\n    },\n    setLen: {\n      name: 'setLen',\n      arg: ['number']\n    },\n    currVersion: {\n      name: 'currVersion',\n      arg: []\n    },\n    metadata: {\n      name: 'metadata',\n      arg: []\n    },\n    history: {\n      name: 'history',\n      arg: []\n    },\n    versionReader: {\n      name: 'versionReader',\n      arg: ['number']\n    }\n  },\n\n  versionReader: {\n    close: {\n      name: 'close',\n      arg: []\n    },\n    read: {\n      name: 'read',\n      arg: ['buffer']\n    },\n    readAll: {\n      name: 'readAll',\n      arg: []\n    },\n    readAllString: {\n      name: 'readAllString',\n      arg: []\n    },\n    seek: {\n      name: 'seek',\n      arg: [{\n        from: { type: 'number' },\n        offset: { type: 'number' }\n      }]\n    }\n  }\n};\n\nexport default MsgTypes;\n","const TRACE = 1;\nconst DEBUG = 2;\nconst INFO = 3;\nconst WARN = 4;\nconst ERROR = 5;\nconst OFF = 99;\n\n// logger\nclass Logger {\n  constructor(level) {\n    this.level = level || WARN;\n  }\n\n  setLevel(level) {\n    switch (level) {\n      case 'trace': this.level = TRACE; return level;\n      case 'debug': this.level = DEBUG; return level;\n      case 'info': this.level = INFO; return level;\n      case 'warn': this.level = WARN; return level;\n      case 'error': this.level = ERROR; return level;\n      case 'off': this.level = OFF; return level;\n      default: this.level = WARN; return 'warn';\n    }\n  }\n\n  trace(msg) {\n    if (this.level <= TRACE) console.log(msg);\n  }\n\n  debug(msg) {\n    if (this.level <= DEBUG) console.debug(msg);\n  }\n\n  info(msg) {\n    if (this.level <= INFO) console.info(msg);\n  }\n\n  warn(msg) {\n    if (this.level <= WARN) console.warn(msg);\n  }\n\n  error(msg) {\n    if (this.level <= ERROR) console.error(msg);\n  }\n}\n\nexport let logger = new Logger();\n","// check if it is object\nexport function isObject(a) {\n  return a !== null && typeof a === 'object';\n}\n\n// check if it is number\nexport function isNumber(n) {\n  return typeof n === 'number';\n}\n\n// check if it is string\nexport function isString(s) {\n  return typeof s === 'string';\n}\n\n// check if it is array buffer view\nexport function isArrayBufferView(value) {\n  return value\n    && value.buffer instanceof ArrayBuffer\n    && value.byteLength !== undefined;\n}\n\n// convert ArrayBuffer to String\nexport function ab2str(buf) {\n  return String.fromCharCode.apply(null, new Uint16Array(buf));\n}\n\n// convert String to ArrayBuffer\nexport function str2ab(str) {\n  var buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  var bufView = new Uint16Array(buf);\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\n// ensure arg is string\nexport function ensureStr(s) {\n  if (typeof s !== 'string') {\n    throw 'Wrong argument, string required';\n  }\n}\n\n// ensure two args are string\nexport function ensureStr2(s, s2) {\n  if (typeof s !== 'string' || typeof s2 !== 'string') {\n    throw 'Wrong argument, string required';\n  }\n}\n\n// ensure one parameter is positive integer number\nexport function ensureInt(n) {\n  if (!Number.isInteger(n) || n < 0) {\n    throw 'Wrong argument, positive integer required';\n  }\n}\n\n// ensure one parameter is positive or negative integer number\nexport function ensureIntOrNeg(n) {\n  if (!Number.isInteger(n)) {\n    throw 'Wrong argument, integer required';\n  }\n}\n","import MsgTypes from \"./message\";\nimport { logger } from './logger';\nimport { isObject, isNumber, isString, isArrayBufferView, str2ab } from \"./utils\";\n\n// global context\nconst ctx = {\n  resolver: null,\n  worker: null\n};\n\nfunction getParamsType(params) {\n  if (isString(params)) {\n    return 'string';\n  } else if (isNumber(params)) {\n    return 'number';\n  } else if (isArrayBufferView(params)) {\n    return 'buffer';\n  } else if (params instanceof ArrayBuffer) {\n    return 'buffer';\n  } else if (isObject(params)) {\n    return 'object';\n  } else if (params === undefined) {\n    return 'undefined'\n  }\n  return 'other';\n}\n\nclass Base {\n  constructor(scope) {\n    this.scope = scope;\n  }\n\n  // bind message resolver and post message to worker\n  _bindMsg(msgType, object, params) {\n    const msg = {\n      scope: this.scope,\n      type: msgType,\n      object,\n      params\n    };\n\n    // check parameters type\n    const paramsType = getParamsType(params);\n    const arg = MsgTypes[this.scope][msgType].arg;\n    const argIsOptional = MsgTypes[this.scope][msgType].optional;\n    const decl = arg.find(arg => {\n      const argType = isObject(arg) ? 'object' : arg;\n      return paramsType === argType;\n    });\n    if (decl === undefined && arg.length > 0 && !argIsOptional) {\n      return Promise.reject(new Error('Wrong argument'));\n    }\n\n    // check required keys if params is object\n    if (paramsType === 'object' && isObject(decl)) {\n      const notMatched = Object.keys(decl).some(key => {\n        const required = !decl[key].optional;\n        return required && !params.hasOwnProperty(key);\n      });\n      if (notMatched) {\n        return Promise.reject(new Error('Wrong argument'));\n      }\n    }\n\n    // set up logger\n    if (msgType === 'initEnv') {\n      logger.setLevel(msg.params ? msg.params.logLevel : 'warn');\n    }\n\n    // deal with array buffer transfer\n    let transBuf = undefined;\n    if (msgType === 'read' || msgType === 'write' || msgType === 'writeOnce') {\n      let buf = params.buffer || params;\n\n      if (paramsType === 'string') {\n        buf = str2ab(params);\n      }\n\n      msg.params = {\n        buf,\n        offset: params.byteOffset || 0,\n        len: params.byteLength\n      };\n\n      transBuf = [buf];\n    }\n\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      ctx.resolver.add(self.scope, msgType, resolve, reject);\n      ctx.worker.postMessage(msg, transBuf);\n    });\n  }\n}\n\nclass Repo extends Base {\n  constructor() {\n    super('repo');\n\n    // add methods based on message types\n    Object.keys(MsgTypes[this.scope]).forEach(msgType => {\n      Repo.prototype[msgType] = this._bindMsg.bind(this, msgType, null);\n    });\n  }\n}\n\nclass File extends Base {\n  constructor(fd) {\n    super('file');\n    this.fd = fd;\n\n    // add methods based on message types\n    Object.keys(MsgTypes[this.scope]).forEach(msgType => {\n      File.prototype[msgType] = this._bindMsg.bind(this, msgType, this.fd);\n    });\n  }\n}\n\nclass VersionReader extends Base {\n  constructor(vrdr) {\n    super('versionReader');\n    this.vrdr = vrdr;\n\n    // add methods based on message types\n    Object.keys(MsgTypes[this.scope]).forEach(msgType => {\n      VersionReader.prototype[msgType] = this._bindMsg.bind(this, msgType, this.vrdr);\n    });\n  }\n}\n\nclass Resolver {\n  constructor() {\n    this.map = Object.keys(MsgTypes).reduce((accum, curr) => {\n      accum[curr] = Object.keys(MsgTypes[curr]).reduce((a, c) => {\n        a[c] = { resolve: null, reject: null };\n        return a;\n      }, {});\n      return accum;\n    }, {});\n  }\n\n  add(scope, msgType, resolve, reject) {\n    this.map[scope][msgType] = { resolve, reject };\n  }\n\n  resolve(event) {\n    const msg = event.data;\n    // console.log(`worker -> main: ${JSON.stringify(msg)}`);\n\n    if (msg.error) {\n      const err = new Error(msg.error);\n      this.map[msg.scope][msg.type].reject(err);\n      return;\n    }\n\n    const msgTypes = MsgTypes[msg.scope];\n    let result = msg.result;\n\n    switch (msg.scope) {\n      case 'zbox': {\n        switch (msg.type) {\n          case msgTypes.openRepo.name:\n            result = new Repo();\n            break;\n        }\n        break;\n      }\n\n      case 'repo': {\n        switch (msg.type) {\n          case msgTypes.openFile.name:\n          case msgTypes.createFile.name:\n            result = new File(result);\n            break;\n        }\n        break;\n      }\n\n      case 'file': {\n        switch (msg.type) {\n          case msgTypes.read.name:\n            result = new Uint8Array(result.buf, result.offset, result.len);\n            break;\n\n          case msgTypes.readAll.name:\n            result = new Uint8Array(result);\n            break;\n\n          case msgTypes.versionReader.name:\n            result = new VersionReader(result);\n            break;\n        }\n        break;\n      }\n\n      case 'versionReader': {\n        switch (msg.type) {\n          case msgTypes.read.name:\n            result = new Uint8Array(result.buf, result.offset, result.len);\n            break;\n\n          case msgTypes.readAll.name:\n            result = new Uint8Array(result);\n            break;\n        }\n        break;\n      }\n    }\n\n    this.map[msg.scope][msg.type].resolve(result);\n  }\n}\n\n// get worker script path\nconst workerPath = document.currentScript.src.replace(/index.js$/, 'worker.js');\n\n// detect WebAssembly support\nconst wasmSupported = (() => {\n  try {\n    if (typeof WebAssembly === \"object\"\n      && typeof WebAssembly.instantiate === \"function\")\n    {\n      const module = new WebAssembly.Module(Uint8Array.of(\n        0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00\n      ));\n      if (module instanceof WebAssembly.Module)\n        return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\n    }\n  } catch (e) {\n  }\n  return false;\n})();\n\nexport class Zbox extends Base {\n  constructor() {\n    super('zbox');\n\n    // check browser support\n    if (!wasmSupported) {\n      throw \"Your browser doesn't support WebAssembly\";\n    }\n    if (!window.Worker) {\n      throw \"Your browser doesn't support Worker\";\n    }\n    if (!window.indexedDB) {\n      throw \"Your browser doesn't support IndexedDB\";\n    }\n\n    // initialise global context objects\n    ctx.resolver = new Resolver();\n    ctx.worker = new Worker(workerPath, { name: 'ZboxWorker' });\n    ctx.worker.onmessage = ctx.resolver.resolve.bind(ctx.resolver);\n    ctx.worker.onerror = (err) => {\n      logger.error(`ZboxFS worker error: ${JSON.stringify(err)}`);\n    };\n\n    // add methods based on message types\n    Object.keys(MsgTypes[this.scope]).forEach(msgType => {\n      Zbox.prototype[msgType] = this._bindMsg.bind(this, msgType, null);\n    });\n  }\n\n  static get SeekFrom() {\n    return {\n      Start: 0,\n      End: 1,\n      Current: 2\n    };\n  }\n\n  exit() {\n    if (ctx.worker) {\n      ctx.worker.terminate();\n      ctx.worker = null;\n      logger.info('ZboxFS exited');\n    }\n    return Promise.resolve();\n  }\n}\n"],"sourceRoot":""}